<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>launch_fixup_main_archive</name>
  <description/>
  <extended_description/>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2015/11/22 15:44:02.308</created_date>
  <modified_user>-</modified_user>
  <modified_date>2015/11/22 15:44:02.308</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>NBSOLAPDS</name>
    <server/>
    <type>POSTGRESQL</type>
    <access>JNDI</access>
    <database>NBSOLAPDS</database>
    <port>1521</port>
    <username/>
    <password>Encrypted </password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1521</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>NEDSSOLAPDS</name>
    <server/>
    <type>POSTGRESQL</type>
    <access>JNDI</access>
    <database>NEDSSOLAPDS</database>
    <port>1521</port>
    <username/>
    <password>Encrypted </password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1521</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>Trisano OLAP DS</name>
    <server/>
    <type>POSTGRESQL</type>
    <access>JNDI</access>
    <database>TrisanoOLAPDS</database>
    <port>1521</port>
    <username/>
    <password>Encrypted </password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>1521</attribute>
      </attribute>
      <attribute>
        <code>PRESERVE_RESERVED_WORD_CASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SQL_CONNECT</code>
        <attribute>set search_path=public</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_TIMESTAMP_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>10</xloc>
      <yloc>190</yloc>
    </entry>
    <entry>
      <name>Success</name>
      <description/>
      <type>SUCCESS</type>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1210</xloc>
      <yloc>400</yloc>
    </entry>
    <entry>
      <name>fact_nbs_result</name>
      <description/>
      <type>SQL</type>
      <sql>update warehouse.fact_nbs_result_2006
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2007
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2008
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2009
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2010
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2011
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2012
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2013
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2014
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

update warehouse.fact_nbs_result_2015
set dw_dx_treatment_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_dx_treatment_date_id;

alter table warehouse.fact_nbs_result
rename column dw_dx_treatment_date_id to dw_dx_treatment_date_num_id;



update warehouse.fact_nbs_result_2006
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2007
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2008
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2009
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2010
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2011
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2012
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2013
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2014
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;

update warehouse.fact_nbs_result_2015
set dw_reviewed_date_id = dd.dw_date_num_id
from warehouse.dim_date_new dd 
where dd.dw_date_id = dw_reviewed_date_id;


alter table warehouse.fact_nbs_result
rename column dw_reviewed_date_id to dw_reviewed_date_num_id;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>624</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>truncate logs</name>
      <description/>
      <type>SHELL</type>
      <filename/>
      <work_directory/>
      <arg_from_previous>N</arg_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <set_append_logfile>N</set_append_logfile>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <insertScript>Y</insertScript>
      <script>pwd
truncate -s 100 /var/local/pentaho/tomcat/logs/catalina.out
truncate -s 100 /var/local/pentaho/tomcat/logs/pentaho.log</script>
      <loglevel>Basic</loglevel>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>220</xloc>
      <yloc>340</yloc>
    </entry>
    <entry>
      <name>vw_fact_nbs_processing_dates</name>
      <description/>
      <type>SQL</type>
      <sql>drop view if exists warehouse.vw_fact_nbs_processing_dates;

create or replace view warehouse.vw_fact_nbs_processing_dates
   as
      select
          fnpd.nbs_kit_no
         ,fnpd.order_number
         ,fnpd.kit_number
         ,fnpd.accession_number
         ,fnpd.specimen_type
         ,fnpd.dw_hospital_id
         ,dnh.rolling_pct_of_births
         ,dnh.rolling_num_births
         ,case when fnpd.dw_birth_date_num_id is null or fnpd.dw_birth_date_num_id = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_birth_date_num_id end as dw_birth_date_num_id
         ,case when fnpd.dw_changed_on_date_num_id is null or fnpd.dw_changed_on_date_num_id = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_changed_on_date_num_id end as dw_changed_on_date_num_id
         ,case when fnpd.dw_sr_accessioned_date_num_id is null or fnpd.dw_sr_accessioned_date_num_id = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_sr_accessioned_date_num_id end as dw_sr_accessioned_date_num_id
         ,case when fnpd.dw_date_collected_date_num_id is null or fnpd.dw_date_collected_date_num_id = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_date_collected_date_num_id end as dw_date_collected_date_num_id
         ,case when fnpd.dw_message_sent_on_date_num_id is null or fnpd.dw_message_sent_on_date_num_id = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_message_sent_on_date_num_id end as dw_message_sent_on_date_num_id
         ,case when fnpd.dw_report_out_date_num_id is null or fnpd.dw_report_out_date_num_id = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_report_out_date_num_id end as dw_report_out_date_num_id
         ,case when fnpd.dw_sr_received_date_num_id_max is null or fnpd.dw_sr_received_date_num_id_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_sr_received_date_num_id_max end as dw_sr_received_date_num_id_max
         ,case when fnpd.dw_login_date_num_id_max is null or fnpd.dw_login_date_num_id_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_login_date_num_id_max end as dw_login_date_num_id_max
         ,case when fnpd.dw_recd_date_num_id_max is null or fnpd.dw_recd_date_num_id_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_recd_date_num_id_max	 end as dw_recd_date_num_id_max	
         ,case when fnpd.dw_completed_date_num_id_max is null or fnpd.dw_completed_date_num_id_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_completed_date_num_id_max end as dw_completed_date_num_id_max
         ,case when fnpd.dw_reviewed_date_num_id_sample_max is null or fnpd.dw_reviewed_date_num_id_sample_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_reviewed_date_num_id_sample_max end as dw_reviewed_date_num_id_sample_max
         ,case when fnpd.dw_message_processed_on_date_num_id_sample_max is null or fnpd.dw_message_processed_on_date_num_id_sample_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_message_processed_on_date_num_id_sample_max end as dw_message_processed_on_date_num_id_sample_max
         ,case when fnpd.dw_result_entry_date_num_id_max is null or fnpd.dw_result_entry_date_num_id_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_result_entry_date_num_id_max end as dw_result_entry_date_num_id_max
         ,case when fnpd.dw_dx_treatment_date_num_id_max is null or fnpd.dw_dx_treatment_date_num_id_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_dx_treatment_date_num_id_max end as dw_dx_treatment_date_num_id_max
         ,case when fnpd.dw_reviewed_date_num_id_result_max is null or fnpd.dw_reviewed_date_num_id_result_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_reviewed_date_num_id_result_max end as dw_reviewed_date_num_id_result_max
         ,case when fnpd.dw_entered_on_date_num_id_max is null or fnpd.dw_entered_on_date_num_id_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_entered_on_date_num_id_max end as dw_entered_on_date_num_id_max
         ,case when fnpd.dw_message_processed_on_date_num_id_result_max is null or fnpd.dw_message_processed_on_date_num_id_result_max = '19000101' then to_number(to_char(now(), 'YYYYMMDD'), '99999999') else dw_message_processed_on_date_num_id_result_max end as dw_message_processed_on_date_num_id_result_max
      from warehouse.fact_nbs_processing_dates fnpd
inner join warehouse.dim_nbs_hospital dnh on dnh.dw_hospital_id = fnpd.dw_hospital_id
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>350</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>vw_fact_nbs_processing_dates_alt</name>
      <description/>
      <type>SQL</type>
      <sql>drop view if exists warehouse.vw_fact_nbs_processing_dates_alt;

create or replace view warehouse.vw_fact_nbs_processing_dates_alt
   as
      select
          fnpd.nbs_kit_no
         ,fnpd.order_number
         ,fnpd.kit_number
         ,fnpd.accession_number
         ,fnpd.specimen_type
         ,fnpd.dw_hospital_id
         ,dnh.rolling_pct_of_births
         ,dnh.rolling_num_births
         ,case when fnpd.dw_birth_date_num_id is null or fnpd.dw_birth_date_num_id = '19000101' then null else dw_birth_date_num_id end as dw_birth_date_num_id
         ,case when fnpd.dw_changed_on_date_num_id is null or fnpd.dw_changed_on_date_num_id = '19000101' then null else dw_changed_on_date_num_id end as dw_changed_on_date_num_id
         ,case when fnpd.dw_sr_accessioned_date_num_id is null or fnpd.dw_sr_accessioned_date_num_id = '19000101' then null else dw_sr_accessioned_date_num_id end as dw_sr_accessioned_date_num_id
         ,case when fnpd.dw_date_collected_date_num_id is null or fnpd.dw_date_collected_date_num_id = '19000101' then null else dw_date_collected_date_num_id end as dw_date_collected_date_num_id
         ,case when fnpd.dw_message_sent_on_date_num_id is null or fnpd.dw_message_sent_on_date_num_id = '19000101' then null else dw_message_sent_on_date_num_id end as dw_message_sent_on_date_num_id
         ,case when fnpd.dw_report_out_date_num_id is null or fnpd.dw_report_out_date_num_id = '19000101' then null else dw_report_out_date_num_id end as dw_report_out_date_num_id
         ,case when fnpd.dw_sr_received_date_num_id_max is null or fnpd.dw_sr_received_date_num_id_max = '19000101' then null else dw_sr_received_date_num_id_max end as dw_sr_received_date_num_id_max
         ,case when fnpd.dw_login_date_num_id_max is null or fnpd.dw_login_date_num_id_max = '19000101' then null else dw_login_date_num_id_max end as dw_login_date_num_id_max
         ,case when fnpd.dw_recd_date_num_id_max is null or fnpd.dw_recd_date_num_id_max = '19000101' then null else dw_recd_date_num_id_max	 end as dw_recd_date_num_id_max	
         ,case when fnpd.dw_completed_date_num_id_max is null or fnpd.dw_completed_date_num_id_max = '19000101' then null else dw_completed_date_num_id_max end as dw_completed_date_num_id_max
         ,case when fnpd.dw_reviewed_date_num_id_sample_max is null or fnpd.dw_reviewed_date_num_id_sample_max = '19000101' then null else dw_reviewed_date_num_id_sample_max end as dw_reviewed_date_num_id_sample_max
         ,case when fnpd.dw_message_processed_on_date_num_id_sample_max is null or fnpd.dw_message_processed_on_date_num_id_sample_max = '19000101' then null else dw_message_processed_on_date_num_id_sample_max end as dw_message_processed_on_date_num_id_sample_max
         ,case when fnpd.dw_result_entry_date_num_id_max is null or fnpd.dw_result_entry_date_num_id_max = '19000101' then null else dw_result_entry_date_num_id_max end as dw_result_entry_date_num_id_max
         ,case when fnpd.dw_dx_treatment_date_num_id_max is null or fnpd.dw_dx_treatment_date_num_id_max = '19000101' then null else dw_dx_treatment_date_num_id_max end as dw_dx_treatment_date_num_id_max
         ,case when fnpd.dw_reviewed_date_num_id_result_max is null or fnpd.dw_reviewed_date_num_id_result_max = '19000101' then null else dw_reviewed_date_num_id_result_max end as dw_reviewed_date_num_id_result_max
         ,case when fnpd.dw_entered_on_date_num_id_max is null or fnpd.dw_entered_on_date_num_id_max = '19000101' then null else dw_entered_on_date_num_id_max end as dw_entered_on_date_num_id_max
         ,case when fnpd.dw_message_processed_on_date_num_id_result_max is null or fnpd.dw_message_processed_on_date_num_id_result_max = '19000101' then null else dw_message_processed_on_date_num_id_result_max end as dw_message_processed_on_date_num_id_result_max
      from warehouse.fact_nbs_processing_dates fnpd
inner join warehouse.dim_nbs_date dnd on dnd.dw_date_num_id = fnpd.dw_birth_date_num_id
inner join warehouse.dim_nbs_hospital dnh on dnh.dw_hospital_id = fnpd.dw_hospital_id;

drop view if exists warehouse.vw_fact_nbs_processing_dates_alt2;

create or replace view warehouse.vw_fact_nbs_processing_dates_alt2
   as
      select
          fnpd.nbs_kit_no
         ,fnpd.kit_number
         ,fnpd.dw_hospital_id
         ,dnh.rolling_pct_of_births
         ,dnh.rolling_num_births
         ,fnpd.dw_birth_date_num_id
         ,max(case when fnpd.dw_changed_on_date_num_id is null or fnpd.dw_changed_on_date_num_id = '19000101' then null else dw_changed_on_date_num_id end) as dw_changed_on_date_num_id
         ,max(case when fnpd.dw_sr_accessioned_date_num_id is null or fnpd.dw_sr_accessioned_date_num_id = '19000101' then null else dw_sr_accessioned_date_num_id end) as dw_sr_accessioned_date_num_id
         ,min(case when fnpd.dw_date_collected_date_num_id is null or fnpd.dw_date_collected_date_num_id = '19000101' then null else dw_date_collected_date_num_id end) as dw_date_collected_date_num_id
         ,max(case when fnpd.dw_message_sent_on_date_num_id is null or fnpd.dw_message_sent_on_date_num_id = '19000101' then null else dw_message_sent_on_date_num_id end) as dw_message_sent_on_date_num_id
         ,max(case when fnpd.dw_report_out_date_num_id is null or fnpd.dw_report_out_date_num_id = '19000101' then null else dw_report_out_date_num_id end) as dw_report_out_date_num_id
         ,max(case when fnpd.dw_sr_received_date_num_id_max is null or fnpd.dw_sr_received_date_num_id_max = '19000101' then null else dw_sr_received_date_num_id_max end) as dw_sr_received_date_num_id_max
         ,max(case when fnpd.dw_login_date_num_id_max is null or fnpd.dw_login_date_num_id_max = '19000101' then null else dw_login_date_num_id_max end) as dw_login_date_num_id_max
         ,max(case when fnpd.dw_recd_date_num_id_max is null or fnpd.dw_recd_date_num_id_max = '19000101' then null else dw_recd_date_num_id_max	 end) as dw_recd_date_num_id_max	
         ,max(case when fnpd.dw_completed_date_num_id_max is null or fnpd.dw_completed_date_num_id_max = '19000101' then null else dw_completed_date_num_id_max end) as dw_completed_date_num_id_max
         ,max(case when fnpd.dw_reviewed_date_num_id_sample_max is null or fnpd.dw_reviewed_date_num_id_sample_max = '19000101' then null else dw_reviewed_date_num_id_sample_max end) as dw_reviewed_date_num_id_sample_max
         ,max(case when fnpd.dw_message_processed_on_date_num_id_sample_max is null or fnpd.dw_message_processed_on_date_num_id_sample_max = '19000101' then null else dw_message_processed_on_date_num_id_sample_max end) as dw_message_processed_on_date_num_id_sample_max
         ,max(case when fnpd.dw_result_entry_date_num_id_max is null or fnpd.dw_result_entry_date_num_id_max = '19000101' then null else dw_result_entry_date_num_id_max end) as dw_result_entry_date_num_id_max
         ,max(case when fnpd.dw_dx_treatment_date_num_id_max is null or fnpd.dw_dx_treatment_date_num_id_max = '19000101' then null else dw_dx_treatment_date_num_id_max end) as dw_dx_treatment_date_num_id_max
         ,max(case when fnpd.dw_reviewed_date_num_id_result_max is null or fnpd.dw_reviewed_date_num_id_result_max = '19000101' then null else dw_reviewed_date_num_id_result_max end) as dw_reviewed_date_num_id_result_max
         ,max(case when fnpd.dw_entered_on_date_num_id_max is null or fnpd.dw_entered_on_date_num_id_max = '19000101' then null else dw_entered_on_date_num_id_max end) as dw_entered_on_date_num_id_max
         ,max(case when fnpd.dw_message_processed_on_date_num_id_result_max is null or fnpd.dw_message_processed_on_date_num_id_result_max = '19000101' then null else dw_message_processed_on_date_num_id_result_max end) as dw_message_processed_on_date_num_id_result_max
      from warehouse.fact_nbs_processing_dates fnpd
inner join warehouse.dim_nbs_date dnd on dnd.dw_date_num_id = fnpd.dw_birth_date_num_id
inner join warehouse.dim_nbs_hospital dnh on dnh.dw_hospital_id = fnpd.dw_hospital_id
group by 1,2,3,4,5,6;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>570</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>add dimhospital and rebuild fnc</name>
      <description/>
      <type>SQL</type>
      <sql>DROP TABLE IF EXISTS warehouse.dim_nbs_hospital;

CREATE TABLE warehouse.dim_nbs_hospital
(
  dw_hospital_id INTEGER
, version INTEGER
, start_date TIMESTAMP
, end_date TIMESTAMP
, hospital_code VARCHAR(128)
, hospital_city VARCHAR(128)
, hospital_state VARCHAR(3)
, hospital_country VARCHAR(128)
, hospital_zip VARCHAR(10)
, pct_of_state_births DECIMAL(5,2)
)
;CREATE INDEX idx_dim_nbs_hospital_lookup ON warehouse.dim_nbs_hospital(hospital_code)
;
CREATE INDEX idx_dim_nbs_hospital_tk ON warehouse.dim_nbs_hospital(dw_hospital_id)
;
CREATE INDEX idx_dim_nbs_hospital_pct_births ON warehouse.dim_nbs_hospital(pct_of_state_births)
;

-- Table: warehouse.fact_nbs_card

DROP TABLE IF EXISTS warehouse.fact_nbs_card;

CREATE TABLE warehouse.fact_nbs_card
(
  nbs_kit_no integer,
  kit_number character varying(15),
  order_number integer,
  dw_birthplace_id integer,
  dw_physician_id integer,
  dw_changed_on_date_num_id integer,
  dw_sr_accessioned_date_num_id integer,
  dw_date_collected_date_num_id integer,
  dw_birth_date_num_id integer,
  dw_mothers_birth_date_num_id integer,
  dw_message_sent_on_date_num_id integer DEFAULT 19000101,
  dw_report_out_date_num_id integer DEFAULT 19000101,
  dw_hospital_id integer,
  src_message_sent_on timestamp without time zone DEFAULT '1900-01-01 00:00:00'::timestamp without time zone,
  src_report_out_date timestamp without time zone DEFAULT '1900-01-01 00:00:00'::timestamp without time zone,
  sr_accessioned timestamp without time zone,
  specimen_type character varying(255),
  accession_number character varying(30),
  reject_reason character varying(128),
  babys_sex character varying(1),
  breast integer,
  bottle integer,
  adoption integer,
  premature_sick integer,
  multiple_birth integer,
  home_birth integer,
  transfusion integer,
  card_ok integer,
  x_missing_data integer,
  transfusion_date date,
  birth_weight numeric(38,0),
  mothers_zip character varying(10),
  recall_reason character varying(10),
  meconium_ileus integer,
  steroids integer,
  tpn integer,
  birthplace_type character varying(255),
  changed_on timestamp without time zone,
  date_collected timestamp without time zone,
  first_entry_on timestamp without time zone,
  second_entry_on timestamp without time zone
  
)
WITH (
  OIDS=FALSE
);
ALTER TABLE warehouse.fact_nbs_card
  OWNER TO pentaho;
GRANT ALL ON TABLE warehouse.fact_nbs_card TO pentaho;
GRANT SELECT ON TABLE warehouse.fact_nbs_card TO bi_nbs_user_role;

-- Index: warehouse.idx_fact_nbs_card_accession_number

-- DROP INDEX warehouse.idx_fact_nbs_card_accession_number;

CREATE INDEX idx_fact_nbs_card_accession_number
  ON warehouse.fact_nbs_card
  USING btree
  (accession_number COLLATE pg_catalog."default");

-- Index: warehouse.idx_fact_nbs_card_babys_sex

-- DROP INDEX warehouse.idx_fact_nbs_card_babys_sex;

CREATE INDEX idx_fact_nbs_card_babys_sex
  ON warehouse.fact_nbs_card
  USING btree
  (babys_sex COLLATE pg_catalog."default");

-- Index: warehouse.idx_fact_nbs_card_birth_blind_entry_on

-- DROP INDEX warehouse.idx_fact_nbs_card_birth_blind_entry_on;

CREATE INDEX idx_fact_nbs_card_birth_blind_entry_on
  ON warehouse.fact_nbs_card
  USING btree
  (first_entry_on);

-- Index: warehouse.idx_fact_nbs_card_birth_date

-- DROP INDEX warehouse.idx_fact_nbs_card_birth_date;

CREATE INDEX idx_fact_nbs_card_birth_date
  ON warehouse.fact_nbs_card
  USING btree
  (dw_birth_date_num_id);

-- Index: warehouse.idx_fact_nbs_card_birth_second_entry_on

-- DROP INDEX warehouse.idx_fact_nbs_card_birth_second_entry_on;

CREATE INDEX idx_fact_nbs_card_birth_second_entry_on
  ON warehouse.fact_nbs_card
  USING btree
  (second_entry_on);

-- Index: warehouse.idx_fact_nbs_card_birthplace

-- DROP INDEX warehouse.idx_fact_nbs_card_birthplace;

CREATE INDEX idx_fact_nbs_card_birthplace
  ON warehouse.fact_nbs_card
  USING btree
  (dw_birthplace_id);

-- Index: warehouse.idx_fact_nbs_card_changed_on

-- DROP INDEX warehouse.idx_fact_nbs_card_changed_on;

CREATE INDEX idx_fact_nbs_card_changed_on
  ON warehouse.fact_nbs_card
  USING btree
  (dw_changed_on_date_num_id);

-- Index: warehouse.idx_fact_nbs_card_date_collected

-- DROP INDEX warehouse.idx_fact_nbs_card_date_collected;

CREATE INDEX idx_fact_nbs_card_date_collected
  ON warehouse.fact_nbs_card
  USING btree
  (dw_date_collected_date_num_id);

-- Index: warehouse.idx_fact_nbs_card_dw_msg_sent_on

-- DROP INDEX warehouse.idx_fact_nbs_card_dw_msg_sent_on;

CREATE INDEX idx_fact_nbs_card_dw_msg_sent_on
  ON warehouse.fact_nbs_card
  USING btree
  (dw_message_sent_on_date_num_id);

-- Index: warehouse.idx_fact_nbs_card_dw_report_out_date

-- DROP INDEX warehouse.idx_fact_nbs_card_dw_report_out_date;

CREATE INDEX idx_fact_nbs_card_dw_report_out_date
  ON warehouse.fact_nbs_card
  USING btree
  (dw_report_out_date_num_id);

-- Index: warehouse.idx_fact_nbs_card_hospital_code

-- DROP INDEX warehouse.idx_fact_nbs_card_hospital_code;

CREATE INDEX idx_fact_nbs_card_hospital
  ON warehouse.fact_nbs_card
  USING btree
  (dw_hospital_id);

-- Index: warehouse.idx_fact_nbs_card_inc_etl

-- DROP INDEX warehouse.idx_fact_nbs_card_inc_etl;

CREATE INDEX idx_fact_nbs_card_inc_etl
  ON warehouse.fact_nbs_card
  USING btree
  (changed_on);

-- Index: warehouse.idx_fact_nbs_card_lookup

-- DROP INDEX warehouse.idx_fact_nbs_card_lookup;

CREATE INDEX idx_fact_nbs_card_lookup
  ON warehouse.fact_nbs_card
  USING btree
  (kit_number COLLATE pg_catalog."default", order_number);

-- Index: warehouse.idx_fact_nbs_card_mothers_birth_date

-- DROP INDEX warehouse.idx_fact_nbs_card_mothers_birth_date;

CREATE INDEX idx_fact_nbs_card_mothers_birth_date
  ON warehouse.fact_nbs_card
  USING btree
  (dw_mothers_birth_date_num_id);

-- Index: warehouse.idx_fact_nbs_card_mothers_zip

-- DROP INDEX warehouse.idx_fact_nbs_card_mothers_zip;

CREATE INDEX idx_fact_nbs_card_mothers_zip
  ON warehouse.fact_nbs_card
  USING btree
  (mothers_zip COLLATE pg_catalog."default");

-- Index: warehouse.idx_fact_nbs_card_name

-- DROP INDEX warehouse.idx_fact_nbs_card_name;

CREATE INDEX idx_fact_nbs_card_name
  ON warehouse.fact_nbs_card
  USING btree
  (kit_number COLLATE pg_catalog."default");

-- Index: warehouse.idx_fact_nbs_card_physician

-- DROP INDEX warehouse.idx_fact_nbs_card_physician;

CREATE INDEX idx_fact_nbs_card_physician
  ON warehouse.fact_nbs_card
  USING btree
  (dw_physician_id);

-- Index: warehouse.idx_fact_nbs_card_recall_reason

-- DROP INDEX warehouse.idx_fact_nbs_card_recall_reason;

CREATE INDEX idx_fact_nbs_card_recall_reason
  ON warehouse.fact_nbs_card
  USING btree
  (recall_reason COLLATE pg_catalog."default");

-- Index: warehouse.idx_fact_nbs_card_reject_reason

-- DROP INDEX warehouse.idx_fact_nbs_card_reject_reason;

CREATE INDEX idx_fact_nbs_card_reject_reason
  ON warehouse.fact_nbs_card
  USING btree
  (reject_reason COLLATE pg_catalog."default");

-- Index: warehouse.idx_fact_nbs_card_specimen_type

-- DROP INDEX warehouse.idx_fact_nbs_card_specimen_type;

CREATE INDEX idx_fact_nbs_card_specimen_type
  ON warehouse.fact_nbs_card
  USING btree
  (specimen_type COLLATE pg_catalog."default");

-- Index: warehouse.idx_fact_nbs_card_sr_accessioned_date

-- DROP INDEX warehouse.idx_fact_nbs_card_sr_accessioned_date;

CREATE INDEX idx_fact_nbs_card_sr_accessioned_date
  ON warehouse.fact_nbs_card
  USING btree
  (dw_sr_accessioned_date_num_id);

-- Index: warehouse.idx_fact_nbs_card_src_msg_sent_on

-- DROP INDEX warehouse.idx_fact_nbs_card_src_msg_sent_on;

CREATE INDEX idx_fact_nbs_card_src_msg_sent_on
  ON warehouse.fact_nbs_card
  USING btree
  (src_message_sent_on);

-- Index: warehouse.idx_fact_nbs_card_src_report_out_date

-- DROP INDEX warehouse.idx_fact_nbs_card_src_report_out_date;

CREATE INDEX idx_fact_nbs_card_src_report_out_date
  ON warehouse.fact_nbs_card
  USING btree
  (src_report_out_date);

-- Index: warehouse.idx_fact_nbs_card_src_sr_accessioned_date

-- DROP INDEX warehouse.idx_fact_nbs_card_src_sr_accessioned_date;

CREATE INDEX idx_fact_nbs_card_src_sr_accessioned_date
  ON warehouse.fact_nbs_card
  USING btree
  (sr_accessioned);

</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>150</xloc>
      <yloc>40</yloc>
    </entry>
    <entry>
      <name>exec_nbs_card_fact_main</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/NBS/exec_nbs_card_fact_main.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>370</xloc>
      <yloc>40</yloc>
    </entry>
    <entry>
      <name>exec_update_nbs_card_fact_w_arup_msg_in_main</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/NBS/exec_update_nbs_card_fact_w_arup_msg_in_main.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>620</xloc>
      <yloc>40</yloc>
    </entry>
    <entry>
      <name>exec_update_nbs_card_w_report_out_date</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/NBS/exec_update_nbs_card_w_report_out_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>900</xloc>
      <yloc>40</yloc>
    </entry>
    <entry>
      <name>fact_nbs_processing_dates 3</name>
      <description/>
      <type>SQL</type>
      <sql>drop view if exists warehouse.vw_fact_nbs_processing_dates;

drop view if exists warehouse.vw_fact_nbs_processing_dates_alt;

drop view if exists warehouse.vw_fact_nbs_processing_dates_alt2;

drop table if exists warehouse.fact_nbs_processing_dates;

create table warehouse.fact_nbs_processing_dates as
(
select
     fnc.nbs_kit_no
    ,fnc.order_number
    ,fnc.kit_number
	,fnc.accession_number
    ,fnc.specimen_type
    ,fnc.dw_hospital_id
    ,fnc.dw_birth_date_num_id
	,fnc.dw_changed_on_date_num_id
	,fnc.dw_sr_accessioned_date_num_id
	,fnc.dw_date_collected_date_num_id
	,fnc.dw_message_sent_on_date_num_id
	,fnc.dw_report_out_date_num_id
    ,max(fncl.dw_sr_received_date_num_id) as dw_sr_received_date_num_id_max
	,max(fns.dw_login_date_num_id) as dw_login_date_num_id_max
	,max(fns.dw_recd_date_num_id) as dw_recd_date_num_id_max	
	,max(fns.dw_completed_date_num_id) as dw_completed_date_num_id_max
	,max(fns.dw_reviewed_date_num_id) as dw_reviewed_date_num_id_sample_max
	,max(fns.dw_message_processed_on_date_num_id) as dw_message_processed_on_date_num_id_sample_max
	,max(fns.dw_result_entry_date_num_id) as dw_result_entry_date_num_id_max
	,max(fnr.dw_dx_treatment_date_num_id) as dw_dx_treatment_date_num_id_max
	,max(fnr.dw_reviewed_date_num_id) as dw_reviewed_date_num_id_result_max
	,max(fnr.dw_entered_on_date_num_id) as dw_entered_on_date_num_id_max
	,max(fnr.dw_message_processed_on_date_num_id) as dw_message_processed_on_date_num_id_result_max
from warehouse.fact_nbs_card fnc left join warehouse.fact_nbs_card_log fncl on fncl.kit_number = fnc.kit_number and fncl.order_number = fnc.order_number
left join warehouse.fact_nbs_sample fns on fns.accession_number = fnc.accession_number
left join warehouse.fact_nbs_result fnr on fnr.sample_number = fns.sample_number
group by 1,2,3,4,5,6,7,8,9,10,11,12
);

CREATE INDEX idx_fnpd_nbs_kit_no
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (nbs_kit_no);

CREATE INDEX idx_fnpd_order_number
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (order_number);

CREATE INDEX idx_fnpd_kit_number
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (kit_number);

CREATE INDEX idx_fnpd_accession_number
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (accession_number);

CREATE INDEX idx_fnpd_fnc_dw_birth_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_birth_date_num_id);

CREATE INDEX idx_fnpd_dw_hospital_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_hospital_id);

CREATE INDEX idx_fnpd_dw_changed_on_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_changed_on_date_num_id);
  
CREATE INDEX idx_fnpd_dw_date_collected_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_date_collected_date_num_id);
  
CREATE INDEX idx_fnpd_dw_message_sent_on_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_message_sent_on_date_num_id);
  
CREATE INDEX idx_fnpd_dw_report_out_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_report_out_date_num_id);

CREATE INDEX idx_fnpd_dw_sr_accessioned_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_sr_accessioned_date_num_id);
  
CREATE INDEX idx_fnpd_dw_login_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_login_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_recd_date_num_id_max	
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_recd_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_completed_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_completed_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_reviewed_date_num_id_result_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_reviewed_date_num_id_result_max);
  
CREATE INDEX idx_fnpd_dw_message_processed_on_date_num_id_result_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_message_processed_on_date_num_id_result_max);
  
CREATE INDEX idx_fnpd_dw_result_entry_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_result_entry_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_dx_treatment_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_dx_treatment_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_reviewed_date_num_id_sample_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_reviewed_date_num_id_sample_max);
  
CREATE INDEX idx_fnpd_dw_entered_on_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_entered_on_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_message_processed_on_date_num_id_sample_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_message_processed_on_date_num_id_sample_max);</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>150</xloc>
      <yloc>160</yloc>
    </entry>
    <entry>
      <name>DOH User Group Grants</name>
      <description/>
      <type>SQL</type>
      <sql>grant select on warehouse.fact_nbs_processing_dates to bi_nbs_user_role;

grant select on warehouse.fact_nbs_processing_dates to bi_nbs_user_role;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>720</xloc>
      <yloc>270</yloc>
    </entry>
    <entry>
      <name>Create vw_nbs_report_card</name>
      <description/>
      <type>SQL</type>
      <sql>drop view vw_nbs_report_card;

create or replace view vw_nbs_report_card as 
select
  fnc.dw_hospital_id
  ,dates.month_num_name
  ,fnc.specimen_type
  ,count(1) as num_specimens_submitted
  ,sum(case when fnc.recall_reason = 'UNSAT2' then 1 else 0 end) as num_unsat_specimens
  ,(sum(case when fnc.recall_reason = 'UNSAT2' then 1 else 0 end)::decimal / count(1)::decimal) as pct_unsat_specimens
  ,min(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) as min_report_tat
   ,sum(case when
(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) &lt;= 2 
then 1
else 0 end) as num_rec_2_day
    ,sum(case when
(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) between 3 and 4 
then 1
else 0 end) as num_rec_3_to_4_day
    ,sum(case when
(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) between 5 and 6 
then 1
else 0 end) as num_rec_5_to_6_day
    ,sum(case when
(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) >=7 
then 1
else 0 end) as num_rec_7_or_more_day
    ,avg(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) as avg_tat
from warehouse.fact_nbs_card fnc
inner join warehouse.fact_nbs_processing_dates fnpd on fnpd.nbs_kit_no = fnc.nbs_kit_no
inner join (
select month_num_name, dw_start_date_num_id, dw_end_date_num_id
from warehouse.vw_date_month_summary
where year4 = date_part('year', CURRENT_DATE)-1
order by month_number
) dates on fnc.dw_birth_date_num_id >= dates.dw_start_date_num_id and fnc.dw_birth_date_num_id &lt; dates.dw_end_date_num_id,
(select (date_part('year',current_date) || lpad(date_part('month', current_date)::text,2,'0') || lpad(date_part('day', current_date)::text, 2,'0'))::integer as today) fill_date
group by 1,2,3
order by 1
;


grant select on warehouse.vw_nbs_report_card to bi_nbs_user_role;

grant select on warehouse.vw_nbs_report_card to bi_nbs_user_role;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>280</xloc>
      <yloc>470</yloc>
    </entry>
    <entry>
      <name>check disk space 3</name>
      <description/>
      <type>SHELL</type>
      <filename/>
      <work_directory/>
      <arg_from_previous>N</arg_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <set_append_logfile>N</set_append_logfile>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <insertScript>Y</insertScript>
      <script>df -h</script>
      <loglevel>Basic</loglevel>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>1</nr>
      <xloc>460</xloc>
      <yloc>280</yloc>
    </entry>
    <entry>
      <name>vacuum 2</name>
      <description/>
      <type>SQL</type>
      <sql>vacuum full;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>1</nr>
      <xloc>570</xloc>
      <yloc>280</yloc>
    </entry>
    <entry>
      <name>check disk space 3 2</name>
      <description/>
      <type>SHELL</type>
      <filename/>
      <work_directory/>
      <arg_from_previous>N</arg_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <set_append_logfile>N</set_append_logfile>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <insertScript>Y</insertScript>
      <script>df -h</script>
      <loglevel>Basic</loglevel>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>1</nr>
      <xloc>670</xloc>
      <yloc>280</yloc>
    </entry>
    <entry>
      <name>Create fact_nbs_result</name>
      <description/>
      <type>SQL</type>
      <sql>-- Table: warehouse.fact_nbs_result
-- alter table warehouse.dim_nbs_hospital rename column dw_hospital_id to dw_nbs_hospital_id;

-- alter table warehouse.fact_nbs_card rename column dw_hospital_id to dw_nbs_hospital_id;

-- alter table warehouse.fact_nbs_card drop column dw_birthplace_id;

drop table if exists warehouse.fact_nbs_result_2005;
drop table if exists warehouse.fact_nbs_result_2009;
drop table if exists warehouse.fact_nbs_result_2016;
drop table if exists warehouse.fact_nbs_result_2008;
drop table if exists warehouse.fact_nbs_result_2017;
drop table if exists warehouse.fact_nbs_result_2015;
drop table if exists warehouse.fact_nbs_result_2007;
drop table if exists warehouse.fact_nbs_result_2014;
drop table if exists warehouse.fact_nbs_result_2018;
drop table if exists warehouse.fact_nbs_result_2013;
drop table if exists warehouse.fact_nbs_result_2006;
drop table if exists warehouse.fact_nbs_result_2012;
drop table if exists warehouse.fact_nbs_result_2011;
drop table if exists warehouse.fact_nbs_result_2010;

DROP TABLE warehouse.fact_nbs_result;

CREATE TABLE warehouse.fact_nbs_result
(
  dw_dx_treatment_date_num_id integer,
  dw_reviewed_date_num_id integer,
  dw_entered_on_date_num_id integer,
  dw_nbs_result_dx_id integer,
  dw_nbs_loinc_id integer,
  dw_nbs_snomed_code_id integer,
  dw_nbs_card_type_id integer,
  dw_nbs_analysis_subcomponent_id integer,
  dw_nbs_units_id integer,
  dw_nbs_analysis_id integer,
  dw_nbs_formatted_result_id integer,
  dw_nbs_hospital_id integer,
  accession_number character varying(30),
  result_number bigint,
  test_number bigint,
  replicate_count integer,
  raw_result character varying(254),
  entered_on timestamp without time zone,
  date_reviewed timestamp without time zone,
  sample_number integer,
  x_dx_date timestamp without time zone,
  x_dx_treatment_date timestamp without time zone,
  dw_message_processed_on_date_num_id integer DEFAULT 19000101,
  src_message_processed_on timestamp without time zone DEFAULT '1900-01-01 00:00:00'::timestamp without time zone
)
WITH (
  OIDS=FALSE
);
ALTER TABLE warehouse.fact_nbs_result
  OWNER TO pentaho;
GRANT ALL ON TABLE warehouse.fact_nbs_result TO pentaho;
GRANT SELECT ON TABLE warehouse.fact_nbs_result TO bi_nbs_user_role;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>250</xloc>
      <yloc>400</yloc>
    </entry>
    <entry>
      <name>Alter dim_nbs_hospital columns</name>
      <description/>
      <type>SQL</type>
      <sql>alter table warehouse.dim_nbs_hospital rename column rolling_num_births to rolling_hospital_num_births;
alter table warehouse.dim_nbs_hospital add column rolling_state_num_births integer;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>340</xloc>
      <yloc>400</yloc>
    </entry>
    <entry>
      <name>truncate fact_nbs_card</name>
      <description/>
      <type>SQL</type>
      <sql>delete from warehouse.fact_nbs_card</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>150</xloc>
      <yloc>280</yloc>
    </entry>
    <entry>
      <name>exec_nbs_card_fact_main 2</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/NBS/exec_nbs_card_fact_main.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>310</xloc>
      <yloc>280</yloc>
    </entry>
    <entry>
      <name>exec_update_nbs_card_fact_w_arup_msg_in_main 2</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/NBS/exec_update_nbs_card_fact_w_arup_msg_in_main.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>900</xloc>
      <yloc>280</yloc>
    </entry>
    <entry>
      <name>exec_update_nbs_card_w_report_out_date 2</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/NBS/exec_update_nbs_card_w_report_out_date.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1210</xloc>
      <yloc>280</yloc>
    </entry>
    <entry>
      <name>update fact_nbs_processing_dates &amp; rpt iews</name>
      <description/>
      <type>SQL</type>
      <sql>drop view if exists vw_nbs_report_card;

drop table if exists warehouse.fact_nbs_processing_dates;

create table warehouse.fact_nbs_processing_dates as
(
select
     fnc.nbs_kit_no
    ,fnc.order_number
    ,fnc.kit_number
	,fnc.accession_number
    ,fnc.specimen_type
    ,fnc.dw_nbs_hospital_id
    ,fnc.dw_birth_date_num_id
	,fnc.dw_changed_on_date_num_id
	,fnc.dw_sr_accessioned_date_num_id
	,fnc.dw_date_collected_date_num_id
	,fnc.dw_message_sent_on_date_num_id
	,fnc.dw_report_out_date_num_id
    ,max(fncl.dw_sr_received_date_num_id) as dw_sr_received_date_num_id_max
	,max(fns.dw_login_date_num_id) as dw_login_date_num_id_max
	,max(fns.dw_recd_date_num_id) as dw_recd_date_num_id_max	
	,max(fns.dw_completed_date_num_id) as dw_completed_date_num_id_max
	,max(fns.dw_reviewed_date_num_id) as dw_reviewed_date_num_id_sample_max
	,max(fns.dw_message_processed_on_date_num_id) as dw_message_processed_on_date_num_id_sample_max
	,max(fns.dw_result_entry_date_num_id) as dw_result_entry_date_num_id_max
	,max(fnr.dw_dx_treatment_date_num_id) as dw_dx_treatment_date_num_id_max
	,max(fnr.dw_reviewed_date_num_id) as dw_reviewed_date_num_id_result_max
	,max(fnr.dw_entered_on_date_num_id) as dw_entered_on_date_num_id_max
	,max(fnr.dw_message_processed_on_date_num_id) as dw_message_processed_on_date_num_id_result_max
from warehouse.fact_nbs_card fnc left join warehouse.fact_nbs_card_log fncl on fncl.kit_number = fnc.kit_number and fncl.order_number = fnc.order_number
left join warehouse.fact_nbs_sample fns on fns.accession_number = fnc.accession_number
left join warehouse.fact_nbs_result fnr on fnr.sample_number = fns.sample_number
group by 1,2,3,4,5,6,7,8,9,10,11,12
);



CREATE INDEX idx_fnpd_nbs_kit_no
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (nbs_kit_no);

CREATE INDEX idx_fnpd_order_number
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (order_number);

CREATE INDEX idx_fnpd_kit_number
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (kit_number);

CREATE INDEX idx_fnpd_accession_number
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (accession_number);

CREATE INDEX idx_fnpd_fnc_dw_birth_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_birth_date_num_id);

CREATE INDEX idx_fnpd_dw_nbs_hospital_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_nbs_hospital_id);

CREATE INDEX idx_fnpd_dw_changed_on_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_changed_on_date_num_id);
  
CREATE INDEX idx_fnpd_dw_date_collected_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_date_collected_date_num_id);
  
CREATE INDEX idx_fnpd_dw_message_sent_on_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_message_sent_on_date_num_id);
  
CREATE INDEX idx_fnpd_dw_report_out_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_report_out_date_num_id);

CREATE INDEX idx_fnpd_dw_sr_accessioned_date_num_id
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_sr_accessioned_date_num_id);
  
CREATE INDEX idx_fnpd_dw_login_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_login_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_recd_date_num_id_max	
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_recd_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_completed_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_completed_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_reviewed_date_num_id_result_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_reviewed_date_num_id_result_max);
  
CREATE INDEX idx_fnpd_dw_message_processed_on_date_num_id_result_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_message_processed_on_date_num_id_result_max);
  
CREATE INDEX idx_fnpd_dw_result_entry_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_result_entry_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_dx_treatment_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_dx_treatment_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_reviewed_date_num_id_sample_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_reviewed_date_num_id_sample_max);
  
CREATE INDEX idx_fnpd_dw_entered_on_date_num_id_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_entered_on_date_num_id_max);
  
CREATE INDEX idx_fnpd_dw_message_processed_on_date_num_id_sample_max
  ON warehouse.fact_nbs_processing_dates
  USING btree
  (dw_message_processed_on_date_num_id_sample_max);




create or replace view vw_nbs_report_card as 
select
  fnc.dw_nbs_hospital_id
  ,dates.month_num_name
  ,fnc.specimen_type
  ,count(1) as num_specimens_submitted
  ,sum(case when fnc.recall_reason = 'UNSAT2' then 1 else 0 end) as num_unsat_specimens
  ,(sum(case when fnc.recall_reason = 'UNSAT2' then 1 else 0 end)::decimal / count(1)::decimal) as pct_unsat_specimens
  ,min(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) as min_report_tat
   ,sum(case when
(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) &lt;= 2 
then 1
else 0 end) as num_rec_2_day
    ,sum(case when
(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) between 3 and 4 
then 1
else 0 end) as num_rec_3_to_4_day
    ,sum(case when
(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) between 5 and 6 
then 1
else 0 end) as num_rec_5_to_6_day
    ,sum(case when
(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) >=7 
then 1
else 0 end) as num_rec_7_or_more_day
    ,avg(case when fnpd.dw_completed_date_num_id_max != 19000101 then fnpd.dw_completed_date_num_id_max else fill_date.today end - fnpd.dw_birth_date_num_id) as avg_tat
from warehouse.fact_nbs_card fnc
inner join warehouse.fact_nbs_processing_dates fnpd on fnpd.nbs_kit_no = fnc.nbs_kit_no
inner join (
select month_num_name, dw_start_date_num_id, dw_end_date_num_id
from warehouse.vw_date_month_summary
where year4 = date_part('year', CURRENT_DATE)-1
order by month_number
) dates on fnc.dw_birth_date_num_id >= dates.dw_start_date_num_id and fnc.dw_birth_date_num_id &lt; dates.dw_end_date_num_id,
(select (date_part('year',current_date) || lpad(date_part('month', current_date)::text,2,'0') || lpad(date_part('day', current_date)::text, 2,'0'))::integer as today) fill_date
group by 1,2,3
order by 1
;

grant select on warehouse.fact_nbs_processing_dates to bi_nbs_user_role;

grant select on warehouse.vw_nbs_report_card to bi_nbs_user_role;
</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>Trisano OLAP DS</connection>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>162</xloc>
      <yloc>394</yloc>
    </entry>
    <entry>
      <name>exec_populate_lat_lon_on_dim_nbs_hospital</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/NBS/exec_populate_lat_lon_on_dim_nbs_hospital.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>150</xloc>
      <yloc>400</yloc>
    </entry>
    <entry>
      <name>Shell</name>
      <description/>
      <type>SHELL</type>
      <filename/>
      <work_directory/>
      <arg_from_previous>N</arg_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <set_append_logfile>N</set_append_logfile>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <insertScript>Y</insertScript>
      <script>pwd
java -version
ls -alt /var/local
echo KETTLE_HOME: $KETTLE_HOME
</script>
      <loglevel>Basic</loglevel>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>32</xloc>
      <yloc>480</yloc>
    </entry>
    <entry>
      <name>log_long_running_queries</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/fixup/log_long_running_queries.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>480</xloc>
      <yloc>432</yloc>
    </entry>
    <entry>
      <name>get_view_sql</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${pentaho.solutions.root.vfs}/etl/fixup/get_view_sql.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration>Pentaho local</run_configuration>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>272</xloc>
      <yloc>496</yloc>
    </entry>
    <entry>
      <name>truncate fact_nbs_sample</name>
      <description/>
      <type>SQL</type>
      <sql>delete from nbs_olap.fact_nbs_sample;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>NBSOLAPDS</connection>
      <parallel>N</parallel>
      <draw>N</draw>
      <nr>0</nr>
      <xloc>304</xloc>
      <yloc>496</yloc>
    </entry>
    <entry>
      <name>nedss_fact_outbreak</name>
      <description/>
      <type>SQL</type>
      <sql>-- Table: nedss_olap.dim_outbreak

DROP TABLE if exists nedss_olap.dim_outbreak;

DROP TABLE if exists nedss_olap.fact_outbreak;

CREATE TABLE nedss_olap.fact_outbreak
(
    src_outbreak_id integer,
	dw_first_known_onset_date_num_id integer,
	dw_date_entered_into_nors_date_num integer,
	dw_outbreak_date_num_id integer,
	first_known_onset_date timestamp without time zone,
	date_entered_into_nors timestamp without time zone,
	outbreak_date timestamp without time zone,
    "number" character varying(1024) COLLATE pg_catalog."default",
    name character varying(1024) COLLATE pg_catalog."default",
    created_at timestamp without time zone,
    src_outbreaks_id integer,
    src_outbreaks_parent_id integer,
    src_condition_id integer,
    src_parent_outbreak_id integer,
    src_location_type integer,
    src_agency_id integer,
    src_status integer,
    report_required boolean,
    report_approved boolean,
    report_approved_date timestamp without time zone,
    link_to_epi_tracker boolean,
    epi_tracker_name character varying(1024) COLLATE pg_catalog."default",
    src_investigator_id integer,
    primary_transmission text COLLATE pg_catalog."default",
    major_setting text COLLATE pg_catalog."default",
    etiology_status text COLLATE pg_catalog."default",
    confirmed_state text COLLATE pg_catalog."default",
    pfge_cluster text COLLATE pg_catalog."default",
    nors_id text COLLATE pg_catalog."default",
    confirmed_cases integer,
    probable_cases integer,
    national_outbreak boolean,
    disease_type text COLLATE pg_catalog."default",
    etl_load_date timestamp without time zone,
    CONSTRAINT pk_dw_dim_outbreak PRIMARY KEY (src_outbreak_id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

-- Index: idx_dim_outbreak_dw_date_entered_into_nors_date_num

-- DROP INDEX nedss_olap.idx_dim_outbreak_dw_date_entered_into_nors_date_num;

CREATE INDEX idx_dim_outbreak_dw_date_entered_into_nors_date_num
    ON nedss_olap.fact_outbreak USING btree
    (dw_date_entered_into_nors_date_num)
    TABLESPACE pg_default;

-- Index: idx_dim_outbreak_dw_first_known_onset_date_num_id

-- DROP INDEX nedss_olap.idx_dim_outbreak_dw_first_known_onset_date_num_id;

CREATE INDEX idx_dim_outbreak_dw_first_known_onset_date_num_id
    ON nedss_olap.fact_outbreak USING btree
    (dw_first_known_onset_date_num_id)
    TABLESPACE pg_default;

-- Index: idx_dim_outbreak_dw_outbreak_date_num_id

-- DROP INDEX nedss_olap.idx_dim_outbreak_dw_outbreak_date_num_id;

CREATE INDEX idx_dim_outbreak_dw_outbreak_date_num_id
    ON nedss_olap.fact_outbreak USING btree
    (dw_outbreak_date_num_id)
    TABLESPACE pg_default;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>NEDSSOLAPDS</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>240</xloc>
      <yloc>480</yloc>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>vw_fact_nbs_processing_dates</from>
      <to>vw_fact_nbs_processing_dates_alt</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>add dimhospital and rebuild fnc</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>add dimhospital and rebuild fnc</from>
      <to>exec_nbs_card_fact_main</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>exec_nbs_card_fact_main</from>
      <to>exec_update_nbs_card_fact_w_arup_msg_in_main</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>exec_update_nbs_card_fact_w_arup_msg_in_main</from>
      <to>exec_update_nbs_card_w_report_out_date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>fact_nbs_processing_dates 3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>fact_nbs_processing_dates 3</from>
      <to>vw_fact_nbs_processing_dates</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check disk space 3</from>
      <to>vacuum 2</to>
      <from_nr>1</from_nr>
      <to_nr>1</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>vacuum 2</from>
      <to>check disk space 3 2</to>
      <from_nr>1</from_nr>
      <to_nr>1</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>truncate fact_nbs_card</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>truncate fact_nbs_card</from>
      <to>exec_nbs_card_fact_main 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>exec_nbs_card_fact_main 2</from>
      <to>check disk space 3</to>
      <from_nr>0</from_nr>
      <to_nr>1</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>check disk space 3 2</from>
      <to>exec_update_nbs_card_fact_w_arup_msg_in_main 2</to>
      <from_nr>1</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>exec_update_nbs_card_fact_w_arup_msg_in_main 2</from>
      <to>exec_update_nbs_card_w_report_out_date 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>exec_update_nbs_card_w_report_out_date 2</from>
      <to>Success</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>exec_populate_lat_lon_on_dim_nbs_hospital</from>
      <to>Success</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>exec_populate_lat_lon_on_dim_nbs_hospital</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>Shell</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Shell</from>
      <to>nedss_fact_outbreak</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>nedss_fact_outbreak</from>
      <to>Success</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes>
    <group>
      <name>METASTORE.pentaho</name>
      <attribute>
        <key>Default Run Configuration</key>
        <value>{"namespace":"pentaho","id":"Default Run Configuration","name":"Default Run Configuration","description":"Defines a default run configuration","metaStoreName":null}</value>
      </attribute>
    </group>
    <group>
      <name>{"_":"Embedded MetaStore Elements","namespace":"pentaho","type":"Default Run Configuration"}</name>
      <attribute>
        <key>Pentaho local</key>
        <value>{"children":[{"children":[],"id":"server","value":null},{"children":[],"id":"clustered","value":"N"},{"children":[],"id":"name","value":"Pentaho local"},{"children":[],"id":"description","value":null},{"children":[],"id":"pentaho","value":"N"},{"children":[],"id":"readOnly","value":"Y"},{"children":[],"id":"sendResources","value":"N"},{"children":[],"id":"logRemoteExecutionLocally","value":"N"},{"children":[],"id":"remote","value":"N"},{"children":[],"id":"local","value":"Y"},{"children":[],"id":"showTransformations","value":"N"}],"id":"Pentaho local","value":null,"name":"Pentaho local","owner":null,"ownerPermissionsList":[]}</value>
      </attribute>
    </group>
  </attributes>
</job>
